Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 28ca4af787192bf50b2d81816e7087e2b62c906e)
+++ b/.idea/misc.xml	(date 1685450899015)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
Index: app/src/main/java/com/example/myapplication/client/WgerApiClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/client/WgerApiClient.kt b/app/src/main/java/com/example/myapplication/client/WgerApiClient.kt
--- a/app/src/main/java/com/example/myapplication/client/WgerApiClient.kt	(revision 28ca4af787192bf50b2d81816e7087e2b62c906e)
+++ b/app/src/main/java/com/example/myapplication/client/WgerApiClient.kt	(date 1685364221244)
@@ -38,7 +38,7 @@
 
     fun getExerciseList(callback: Callback) {
 
-        //val rapidApiKey="8c4d633ecemsh71532635d22ab50p1bf3f7jsn43b9862c8b61"
+        val rapidApiKey="8c4d633ecemsh71532635d22ab50p1bf3f7jsn43b9862c8b61"
         val rapidApiHost="exercisedb.p.rapidapi.com"
         val exercisesUrl = "https://${rapidApiHost}/exercises"
         val request = Request.Builder()
Index: app/src/main/java/com/example/myapplication/adapters/WorkoutAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/adapters/WorkoutAdapter.kt b/app/src/main/java/com/example/myapplication/adapters/WorkoutAdapter.kt
--- a/app/src/main/java/com/example/myapplication/adapters/WorkoutAdapter.kt	(revision 28ca4af787192bf50b2d81816e7087e2b62c906e)
+++ b/app/src/main/java/com/example/myapplication/adapters/WorkoutAdapter.kt	(date 1685372678218)
@@ -4,6 +4,7 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.Button
 import android.widget.ImageButton
 import android.widget.Toast
 import androidx.appcompat.app.AlertDialog
@@ -25,10 +26,14 @@
 
     private var onItemClickListener: ((Workout) -> Unit)? = null
 
+
     fun setOnItemClickListener(listener: (Workout) -> Unit) {
         onItemClickListener = listener
     }
 
+
+
+
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): WorkoutViewHolder {
         val binding = WorkoutItemBinding.inflate(LayoutInflater.from(parent.context), parent, false)
         return WorkoutViewHolder(binding)
@@ -37,12 +42,19 @@
     override fun onBindViewHolder(holder: WorkoutViewHolder, position: Int) {
         val workout = getItem(position)
         holder.bindWorkoutData(workout)
-        holder.addButtonClickListener(workout)
+        holder.addButtonClickListener(holder,workout)
     }
 
     inner class WorkoutViewHolder(private val binding: WorkoutItemBinding) :
         RecyclerView.ViewHolder(binding.root) {
 
+        private var parentAddOrRemoveButton : ImageButton? = null
+
+        public fun setParentButton(parentButton :ImageButton?) {
+            parentAddOrRemoveButton = parentButton
+        }
+
+
         fun bindWorkoutData(workout: Workout) {
             with(binding) {
                 nameTextView.text = workout.name
@@ -63,8 +75,7 @@
         }
 
         @SuppressLint("UseCompatLoadingForDrawables")
-        fun addButtonClickListener(workout: Workout) {
-            val itemInMyWorkouts = false
+        fun addButtonClickListener(holder: WorkoutViewHolder,workout: Workout) {
             val button = ImageButton(binding.root.context).apply {
                 val iconResId = if (isDeleteButton) R.drawable.trash_icon else R.drawable.add_icon
                 val icon = binding.root.resources.getDrawable(iconResId)
@@ -75,12 +86,13 @@
                         showRemoveOrAddItemDialog(binding.root,workout.name, true) { isOkClicked ->
                                 if (isOkClicked){
                                     onItemClickListener?.invoke(workout)
-                                }
+                                    holder.parentAddOrRemoveButton?.visibility = View.VISIBLE                                }
                         }
                     } else {
                         showRemoveOrAddItemDialog(binding.root,workout.name, false) { isOkClicked ->
                                 if (isOkClicked){
                                     onItemClickListener?.invoke(workout)
+                                    holder.parentAddOrRemoveButton?.visibility = View.GONE
                                 }
                             }
                     }
@@ -96,7 +108,11 @@
                 setLayoutParams(layoutParams)
             }
 
+            holder.parentAddOrRemoveButton = button
+
+
             val container = binding.root as? ViewGroup
+
             container?.addView(button)
         }
     }
